name: Docker
on:
  workflow_dispatch:
  workflow_run:
    workflows: 
      - release
    types:
      - completed
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  IMAGE_NAME: lycheeverse/lychee
  DOCKER_PLATFORMS: linux/amd64,linux/arm64/v8
  DOCKERFILE: Dockerfile-CI.Dockerfile
  DOCKERFILE_ALPINE: Dockerfile-CI.alpine.Dockerfile

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'lycheeverse' &&
        github.actor != 'dependabot[bot]' &&
        ( github.event_name != 'pull_request' || github.event.pull_request.head.repo.owner.login == github.event.pull_request.base.repo.owner.login )
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta (debian)
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.IMAGE_NAME }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Docker meta (alpine)
        id: meta-alpine
        uses: docker/metadata-action@v5
        with:
          # A global suffix for each generated tag
          flavor: |
            suffix=-alpine
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.IMAGE_NAME }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Image (debian)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ env.DOCKERFILE }}
          platforms: ${{ env.DOCKER_PLATFORMS }}
          push: ${{ (github.event_name != 'pull_request' &&
                     github.actor != 'dependabot[bot]') ||
                     startsWith(github.ref, 'lychee-v') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            "LYCHEE_VERSION=${{ github.ref == 'refs/heads/master' && 'nightly' || 'latest' }}"

      - name: Push Image (alpine)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ env.DOCKERFILE_ALPINE }}
          platforms: ${{ env.DOCKER_PLATFORMS }}
          push: ${{ (github.event_name != 'pull_request' &&
                     github.actor != 'dependabot[bot]') ||
                     startsWith(github.ref, 'lychee-v') }}
          tags: ${{ steps.meta-alpine.outputs.tags }}
          labels: ${{ steps.meta-alpine.outputs.labels }}
          build-args: |
            "LYCHEE_VERSION=${{ github.ref == 'refs/heads/master' && 'nightly' || 'latest' }}"

      - name: Update DockerHub description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: lycheeverse/lychee
          readme-filepath: README.md
